(function(){angular.module("jumuro.httpInterceptor",["toaster"])})(),function(){"use strict";angular.module("jumuro.httpInterceptor").constant("httpInterceptorNotificationChannelConstants",{events:{_START_REQUEST_:"_START_REQUEST_",_END_REQUEST_:"_END_REQUEST_"}})}(),function(){"use strict";function n(n,t){function i(i){t.$broadcast(n.events._START_REQUEST_,i)}function r(i){t.$broadcast(n.events._END_REQUEST_,i)}function u(t,i){t.$on(n.events._START_REQUEST_,function(n,t){i(t)})}function f(t,i){t.$on(n.events._END_REQUEST_,function(n,t){i(t)})}return{requestStarted:i,requestEnded:r,onRequestStarted:u,onRequestEnded:f}}angular.module("jumuro.httpInterceptor").factory("httpInterceptorNotificationChannelService",n);n.$inject=["httpInterceptorNotificationChannelConstants","$rootScope"]}(),function(){"use strict";function n(n,t,i,r){function f(n){return r.requestStarted(n),n}function e(t){return r.requestEnded(t),n.reject(t)}function o(n){var f;return u=u||t.get("$http"),u.pendingRequests.length<1&&r.requestEnded(n),n!=undefined&&(n.status===201?(f=n.headers(),f.message!=undefined&&i.pop("sucess","Success",f.message)):n.status===200&&(f=n.headers(),f.message!=undefined&&i.pop("sucess","Success",f.message))),n}function s(i){return u=u||t.get("$http"),u.pendingRequests.length<1&&r.requestEnded(i),n.reject(i)}var u;return{request:f,requestError:e,response:o,responseError:s}}angular.module("jumuro.httpInterceptor").factory("httpInterceptorService",n);n.$inject=["$q","$injector","toaster","httpInterceptorNotificationChannelService"]}();
//# sourceMappingURL=httpInterceptorBundle.1.0.0.1.min.js.map
