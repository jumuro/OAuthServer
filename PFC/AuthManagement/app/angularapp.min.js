"use strict";function appCtrl(){}function clientCtrl(n,t,i,r,u,f,e){var o=function(){n.gridClientsOptions={columnList:[{name:"clientId",header:"Client Id",isFilter:!1,isOrder:!0},{name:"description",header:"Description",isFilter:!1,isOrder:!0},{name:"applicationType.description",header:"Application Type",isFilter:!1,isOrder:!0},{name:"accessTokenExpireTime",header:"Access Token Expire Time",isFilter:!1,isOrder:!0},{name:"refreshTokenLifeTime",header:"Refresh Token Life Time",isFilter:!1,isOrder:!0},{name:"allowedOrigin",header:"Allowed Origin",isFilter:!0,isOrder:!0},{name:"isActive",header:"Is Active",isFilter:!0,isOrder:!0}],noDataMessage:"There are no clients",animate:!0,crudOptions:{enable:!0,insert:{security:{route:"/client",action:"insert"},method:function(){n.openPopup(!1,null)}},edit:{security:{route:"/client",action:"edit"},method:function(t){n.openPopup(!0,t)}},"delete":{security:{route:"/client",action:"delete"},method:function(t){n.deleteClient(t)}}}}},s=function(){f.restGet(e.appConfig.ApiURL+u.urls.ApiUrl.clientsSetup,!1).then(function(t){n.gridClientsOptions.dataList=t.clients;n.applicationTypes=t.applicationTypes})};n.initialize=function(){o();s()};n.openPopup=function(t,r){var u=angular.copy(r),f=i.open({windowClass:"modalWindow",templateUrl:"./app/views/ClientPopup.html",controller:"clientPopupCtrl",resolve:{items:function(){return{isEdit:t,client:u,applicationTypes:n.applicationTypes}}}});f.result.then(function(t){if(t.isRefresh)if(t.isEdition){for(var i=0;i<n.gridClientsOptions.dataList.length;i++)if(n.gridClientsOptions.dataList[i].clientId==t.client.clientId){n.gridClientsOptions.dataList[i]=t.client;break}}else n.gridClientsOptions.dataList.push(t.client)},function(){})};n.deleteClient=function(i){var r=[{name:"Client Id",value:i.clientId},{name:"Description",value:i.description}],o={headerText:"Please Confirm",message:"Are you sure you want to delete this client?",buttons:{ok:"Yes",cancel:"No"},modalType:"confirm",details:r},s=t.modal(o);s.then(function(){f.restDelete(e.appConfig.ApiURL+u.urls.ApiUrl.deleteClient.replace("{clientId}",i.clientId),!1).then(function(){var t=n.gridClientsOptions.dataList.indexOf(i);t!=-1&&n.gridClientsOptions.dataList.splice(t,1)})},function(){})}}function clientPopupCtrl(n,t,i,r,u,f){n.initialize=function(){if(n.form={},n.resultPopUp={isRefresh:!1,client:[]},n.client=u.client,n.applicationTypes=u.applicationTypes,n.isEdit=u.isEdit,u.isEdit){for(var t=0;t<n.applicationTypes.length;t++)if(n.client.applicationType.id==n.applicationTypes[t].id){n.client.applicationType=n.applicationTypes[t];break}n.popupHeaderText="Edit";n.popupOkText="Update"}else n.popupHeaderText="Add",n.popupOkText="Add"};n.ok=function(){n.resultPopUp.isRefresh=!0;u.isEdit?r.restPut(n.client,f.appConfig.ApiURL+i.urls.ApiUrl.putClient,!1).then(function(i){n.resultPopUp.isEdition=!0;n.resultPopUp.client=i;t.close(n.resultPopUp)}):r.restPost(n.client,f.appConfig.ApiURL+i.urls.ApiUrl.postClient,!1).then(function(i){n.resultPopUp.isEdition=!1;n.resultPopUp.client=i;t.close(n.resultPopUp)})};n.cancel=function(){t.dismiss("cancel")}}function refreshTokenCtrl(n,t,i,r,u,f){var o=function(){n.gridRefreshTokensOptions={columnList:[{name:"refreshTokenId",header:"Refresh Token Id",isFilter:!1,isOrder:!1},{name:"userName",header:"User",isFilter:!1,isOrder:!1},{name:"clientId",header:"Client",isFilter:!1,isOrder:!1},{name:"issuedUtc",header:"Issued At (UTC)",isFilter:!1,isOrder:!1},{name:"expiresUtc",header:"Expires At (UTC)",isFilter:!1,isOrder:!1}],noDataMessage:"There are no refresh tokens",animate:!0,crudOptions:{enable:!0,"delete":{security:{route:"/refreshToken",action:"delete"},method:function(t){n.deleteRefreshToken(t)}}},infiniteScroll:{isActive:!0,distance:0,perPage:12,initialLoad:30}}},e=function(){u.restGet(f.appConfig.ApiURL+r.urls.ApiUrl.getRefreshTokens,!1).then(function(t){n.gridRefreshTokensOptions.dataList=t})};n.initialize=function(){o();e()};n.getRefreshTokens=function(){e()};n.deleteRefreshToken=function(i){var e=[{name:"Refresh Token Id",value:i.refreshTokenId},{name:"User Name",value:i.userName},{name:"Client Id",value:i.clientId},{name:"Issued At (UTC)",value:i.issuedUtc},{name:"Expires At (UTC)",value:i.expiresUtc}],o={headerText:"Please Confirm",message:"Are you sure you want to delete this refreshToken?",buttons:{ok:"Yes",cancel:"No"},modalType:"confirm",details:e},s=t.modal(o);s.then(function(){var t=window.encodeURIComponent(i.refreshTokenId);u.restDelete(f.appConfig.ApiURL+r.urls.ApiUrl.deleteRefreshToken.replace("{refreshTokenId}",t),!1).then(function(){var t=n.gridRefreshTokensOptions.dataList.indexOf(i);t!=-1&&n.gridRefreshTokensOptions.dataList.splice(t,1)})},function(){})}}function roleCtrl(n,t,i,r,u,f,e){var o=function(){n.gridRolesOptions={columnList:[{name:"name",header:"Role",isFilter:!1,isOrder:!0,width:"85%"}],noDataMessage:"There are no roles",animate:!0,crudOptions:{enable:!0,insert:{security:{route:"/role",action:"insert"},method:function(){n.openPopup(!1,null)}},edit:{security:{route:"/role",action:"edit"},method:function(t){n.openPopup(!0,t)}},"delete":{security:{route:"/role",action:"delete"},method:function(t){n.deleteRole(t)}}}}},s=function(){f.restGet(e.appConfig.ApiURL+u.urls.ApiUrl.getRoles,!1).then(function(t){n.gridRolesOptions.dataList=t})};n.initialize=function(){o();s()};n.openPopup=function(t,r){var u=angular.copy(r),f=i.open({windowClass:"modalWindow",templateUrl:"./app/views/RolePopup.html",controller:"rolePopupCtrl",resolve:{items:function(){return{isEdit:t,role:u}}}});f.result.then(function(t){if(t.isRefresh)if(t.isEdition){for(var i=0;i<n.gridRolesOptions.dataList.length;i++)if(n.gridRolesOptions.dataList[i].id==t.role.id){n.gridRolesOptions.dataList[i]=t.role;break}}else n.gridRolesOptions.dataList.push(t.role)},function(){})};n.deleteRole=function(i){var r=[{name:"Name",value:i.name}],o={headerText:"Please Confirm",message:"Are you sure you want to delete this role?",buttons:{ok:"Yes",cancel:"No"},modalType:"confirm",details:r},s=t.modal(o);s.then(function(){f.restDelete(e.appConfig.ApiURL+u.urls.ApiUrl.deleteRole.replace("{roleId}",i.id),!1).then(function(){var t=n.gridRolesOptions.dataList.indexOf(i);t!=-1&&n.gridRolesOptions.dataList.splice(t,1)})},function(){})}}function rolePopupCtrl(n,t,i,r,u,f){n.initialize=function(){n.form={};n.resultPopUp={isRefresh:!1,role:[]};n.role=u.role;n.isEdit=u.isEdit;u.isEdit?(n.popupHeaderText="Edit",n.popupOkText="Update"):(n.popupHeaderText="Add",n.popupOkText="Add")};n.ok=function(){n.resultPopUp.isRefresh=!0;u.isEdit?r.restPut(n.role,f.appConfig.ApiURL+i.urls.ApiUrl.putRole,!1).then(function(i){n.resultPopUp.isEdition=!0;n.resultPopUp.role=i;t.close(n.resultPopUp)}):r.restPost(n.role,f.appConfig.ApiURL+i.urls.ApiUrl.postRole,!1).then(function(i){n.resultPopUp.isEdition=!1;n.resultPopUp.role=i;t.close(n.resultPopUp)})};n.cancel=function(){t.dismiss("cancel")}}function userCtrl(n,t,i,r,u,f,e){var o=function(){n.gridUsersOptions={columnList:[{name:"userName",header:"User Name",isFilter:!1,isOrder:!0},{name:"email",header:"Email",isFilter:!1,isOrder:!0},{name:"client.clientId",header:"Client Id",isFilter:!1,isOrder:!0},{name:"role.name",header:"Role Name",isFilter:!1,isOrder:!0},{name:"isActive",header:"Is Active",isFilter:!0,isOrder:!0}],noDataMessage:"There are no users",animate:!0,crudOptions:{enable:!0,insert:{security:{route:"/user",action:"insert"},method:function(){n.openPopup(!1,null)}},edit:{security:{route:"/user",action:"edit"},method:function(t){n.openPopup(!0,t)}},"delete":{security:{route:"/user",action:"delete"},method:function(t){n.deleteUser(t)}}}}},s=function(){f.restGet(e.appConfig.ApiURL+u.urls.ApiUrl.usersSetup,!1).then(function(t){n.gridUsersOptions.dataList=t.users;n.roles=t.roles;n.clients=t.clients})};n.initialize=function(){o();s()};n.openPopup=function(t,r){var u=angular.copy(r),f=i.open({windowClass:"modalWindow",templateUrl:"./app/views/UserPopup.html",controller:"userPopupCtrl",resolve:{items:function(){return{isEdit:t,user:u,roles:n.roles,clients:n.clients}}}});f.result.then(function(t){if(t.isRefresh)if(t.isEdition){for(var i=0;i<n.gridUsersOptions.dataList.length;i++)if(n.gridUsersOptions.dataList[i].userId==t.user.userId){n.gridUsersOptions.dataList[i]=t.user;break}}else n.gridUsersOptions.dataList.push(t.user)},function(){})};n.deleteUser=function(i){var r=[{name:"User Name",value:i.userName}],o={headerText:"Please Confirm",message:"Are you sure you want to delete this user?",buttons:{ok:"Yes",cancel:"No"},modalType:"confirm",details:r},s=t.modal(o);s.then(function(){f.restDelete(e.appConfig.ApiURL+u.urls.ApiUrl.deleteUser.replace("{userId}",i.userId),!1).then(function(){var t=n.gridUsersOptions.dataList.indexOf(i);t!=-1&&n.gridUsersOptions.dataList.splice(t,1)})},function(){})}}function userPopupCtrl(n,t,i,r,u,f){n.initialize=function(){var t;if(n.form={},n.resultPopUp={isRefresh:!1,client:[]},n.user=u.user,n.roles=u.roles,n.clients=u.clients,n.isEdit=u.isEdit,u.isEdit){for(t=0;t<n.roles.length;t++)if(n.user.role.id==n.roles[t].id){n.user.role=n.roles[t];break}for(t=0;t<n.clients.length;t++)if(n.user.client.clientId==n.clients[t].clientId){n.user.client=n.clients[t];break}n.popupHeaderText="Edit";n.popupOkText="Update"}else n.popupHeaderText="Add",n.popupOkText="Add"};n.ok=function(){n.resultPopUp.isRefresh=!0;u.isEdit?r.restPut(n.user,f.appConfig.ApiURL+i.urls.ApiUrl.putUser,!1).then(function(i){n.resultPopUp.isEdition=!0;n.resultPopUp.user=i;t.close(n.resultPopUp)}):r.restPost(n.user,f.appConfig.ApiURL+i.urls.ApiUrl.postUser,!1).then(function(i){n.resultPopUp.isEdition=!1;n.resultPopUp.user=i;t.close(n.resultPopUp)})};n.cancel=function(){t.dismiss("cancel")}}function match(){return{require:"ngModel",restrict:"A",scope:{match:"="},link:function(n,t,i,r){n.$watch(function(){var t=r.$modelValue||r.$$invalidModelValue;return r.$pristine&&angular.isUndefined(t)||n.match===t},function(n){r.$setValidity("match",n)})}}}angular.module("app",["ngRoute","ngLocale","espa.crudRest","espa.publicOAuth","espa.spinner","espa.modal","espa.grid","espa.validations","espa.intranet","espa.errorHandling","espa.webapi"]).run(["$rootScope",function(n){n.title="";n.$on("$routeChangeError",function(n,t,i,r){r.status===404&&$location.path("/home")})}]).config(["$routeProvider","$locationProvider","$httpProvider",function(n,t,i){i.interceptors.push("httpInterceptorService");n.when("/role",{templateUrl:"./app/views/role.html",controller:"roleCtrl",menuTitle:"Roles",levelTree:[{title:"Security",icon:"fa fa-lock"},{title:"Auth Management",icon:""},{title:"Roles",icon:""}]}).when("/client",{templateUrl:"./app/views/client.html",controller:"clientCtrl",menuTitle:"Clients",levelTree:[{title:"Security",icon:"fa fa-lock"},{title:"Auth Management",icon:""},{title:"Clients",icon:""}]}).when("/refreshToken",{templateUrl:"./app/views/refreshtoken.html",controller:"refreshTokenCtrl",menuTitle:"RefreshTokens",levelTree:[{title:"Security",icon:"fa fa-lock"},{title:"Auth Management",icon:""},{title:"RefreshTokens",icon:""}]}).when("/user",{templateUrl:"./app/views/user.html",controller:"userCtrl",menuTitle:"Users",levelTree:[{title:"Security",icon:"fa fa-lock"},{title:"Auth Management",icon:""},{title:"Users",icon:""}]})}]);angular.module("app").controller("appCtrl",appCtrl);appCtrl.$inject=["$scope","webapiConstants"];angular.module("app").controller("clientCtrl",clientCtrl);clientCtrl.$inject=["$scope","modalService","$modal","toaster","webapiConstants","espaCrudRESTService","webapiAppConfigConstants"];angular.module("app").controller("clientPopupCtrl",clientPopupCtrl);clientPopupCtrl.$inject=["$scope","$modalInstance","webapiConstants","espaCrudRESTService","items","webapiAppConfigConstants"];var app=angular.module("app");app.controller("modalInstanceCtrl",["$scope","$modalInstance","modalScope",function(n,t,i){n.buttons=i.buttons;n.message=i.message;n.headerText=i.headerText;n.details=i.details;n.ok=function(){t.close(!0)};n.cancel=function(){t.dismiss("cancel")}}]);angular.module("app").controller("refreshTokenCtrl",refreshTokenCtrl);refreshTokenCtrl.$inject=["$scope","modalService","toaster","webapiConstants","espaCrudRESTService","webapiAppConfigConstants"];angular.module("app").controller("roleCtrl",roleCtrl);roleCtrl.$inject=["$scope","modalService","$modal","toaster","webapiConstants","espaCrudRESTService","webapiAppConfigConstants"];angular.module("app").controller("rolePopupCtrl",rolePopupCtrl);rolePopupCtrl.$inject=["$scope","$modalInstance","webapiConstants","espaCrudRESTService","items","webapiAppConfigConstants"];angular.module("app").controller("userCtrl",userCtrl);userCtrl.$inject=["$scope","modalService","$modal","toaster","webapiConstants","espaCrudRESTService","webapiAppConfigConstants"];angular.module("app").controller("userPopupCtrl",userPopupCtrl);userPopupCtrl.$inject=["$scope","$modalInstance","webapiConstants","espaCrudRESTService","items","webapiAppConfigConstants"];angular.module("app").directive("match",match);
/*
//# sourceMappingURL=angularapp.min.js.map
*/