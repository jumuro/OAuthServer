"use strict";angular.module("espa.httpInterceptor",["espa.notificationChannel","toaster"]);angular.module("espa.httpInterceptor").service("notificationChannelRequestExt",["notificationChannel","notificationChannelConstants","$rootScope",function(n,t,i){t.events._START_REQUEST_="_START_REQUEST_";t.events._END_REQUEST_="_END_REQUEST_";var r=angular.extend(n,{});r.requestStarted=function(n){i.$broadcast(t.events._START_REQUEST_,n)};r.requestEnded=function(n){i.$broadcast(t.events._END_REQUEST_,n)};r.onRequestStarted=function(n,i){n.$on(t.events._START_REQUEST_,function(n,t){i(t)})};r.onRequestEnded=function(n,i){n.$on(t.events._END_REQUEST_,function(n,t){i(t)})}}]);angular.module("espa.httpInterceptor").service("httpInterceptorService",["$q","$injector","toaster","notificationChannelRequestExt",function(n,t,i){var r,u;return{request:function(n){return r=r||t.get("notificationChannel"),r.requestStarted(n),n},requestError:function(i){return r=r||t.get("notificationChannel"),r.requestEnded(i),n.reject(i)},response:function(n){var f;return u=u||t.get("$http"),u.pendingRequests.length<1&&(r=r||t.get("notificationChannel"),r.requestEnded(n)),n!=undefined&&(n.status===201?(f=n.headers(),f.message!=undefined&&i.pop("sucess","Success",f.message)):n.status===200&&(f=n.headers(),f.message!=undefined&&i.pop("sucess","Success",f.message))),n},responseError:function(f){return u=u||t.get("$http"),u.pendingRequests.length<1&&(r=r||t.get("notificationChannel"),r.requestEnded(f)),f!=undefined&&(f.status===400?f.data[0]&&i.pop("error","Bad Request",f.data[0]):f.status===404?f.data&&i.pop("error","Not Found",f.data):f.status===409?f.data&&i.pop("error","Conflict",f.data):f.status===500?f.data&&i.pop("error","Internal Server","Internal server error"):f.status===304&&f.data&&i.pop("warning","Warning","Not modified")),n.reject(f)}}}]);
/*
//# sourceMappingURL=httpInterceptorBundle.1.0.0.7.min.js.map
*/