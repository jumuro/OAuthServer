"use strict";function config(n,t,i){t.interceptors.push("oAuthHttpInterceptor");i.appPathName=window.location.pathname.substr(0,window.location.pathname.lastIndexOf("/")+1);i.oAuthCookieName=("AppInfo_"+window.location.host+i.appPathName).replace(/[:\/]/g,"_")}function oAuthHttpInterceptor(n,t,i,r,u){var f={},e=function(n){var f,e;return n.url.indexOf(u.appConfig.ApiURL)>=0&&(n.headers=n.headers||{},f=i(r.oAuthCookieName),f?n.headers.Authorization="Bearer "+f.access_token:(e=t.get("oAuthService"),e.logOut())),n},o=function(u){var o;if(u.status===401){var s=t.get("oAuthService"),h=i(r.oAuthCookieName),f=f||t.get("$http"),e=n.defer();return h&&s.refreshToken().then(function(){return e.resolve(f(u.config))}),e.promise}if(u.status===403)o=t.get("toaster"),o.pop("error","Access Denied","You are not authorized to do this request.");else return n.reject(u)};return f.request=e,f.responseError=o,f}function oAuthService(n,t,i,r,u,f){var o=function(){var h=f.appConfig.OAuthURL,i=t.defer(),o=r(u.oAuthCookieName),s;return o&&(s="grant_type=refresh_token&refresh_token="+o.refresh_token+"&client_id="+o.client_id,n.post(h,s,{headers:{"Content-Type":"application/x-www-form-urlencoded"}}).success(function(n){r(u.oAuthCookieName,n,{path:u.appPathName});i.resolve(n)}).error(function(n){e();i.reject(n)})),i.promise},e=function(){r.remove(u.oAuthCookieName,{path:u.appPathName});var n=i.get("toaster");n.pop("error","Cookie error","Authorization info not found. Trying to authorize again...");window.location.href=u.appPathName};return{refreshToken:function(){return o()},logOut:function(){return e()}}}angular.module("espa.publicOAuth",["espa.notificationChannel","ipCookie","toaster","espa.webapi"]).config(config);config.$inject=["$routeProvider","$httpProvider","oAuthConstants"];angular.module("espa.publicOAuth").constant("oAuthConstants",{oAuthCookieName:"",appPathName:""});angular.module("espa.publicOAuth").factory("oAuthHttpInterceptor",oAuthHttpInterceptor);oAuthHttpInterceptor.$inject=["$q","$injector","ipCookie","oAuthConstants","webapiAppConfigConstants"];angular.module("espa.publicOAuth").service("oAuthService",oAuthService);oAuthService.$inject=["$http","$q","$injector","ipCookie","oAuthConstants","webapiAppConfigConstants"];
/*
//# sourceMappingURL=oauthBundle.1.0.0.9.min.js.map
*/