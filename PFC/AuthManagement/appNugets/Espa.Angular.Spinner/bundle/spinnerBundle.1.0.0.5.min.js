"use strict";function notificationChannelSpinnerService(n,t){var i=function(i){t.$broadcast(n.events._START_REPEAT_,i)},r=function(i){t.$broadcast(n.events._END_REPEAT_,i)},u=function(t,i){t.$on(n.events._END_REPEAT_,function(n,t){i(t)})},f=function(t,i){t.$on(n.events._START_REPEAT_,function(n,t){i(t)})};return{repeatEnded:r,onRepeatEnded:u,repeatStarted:i,onRepeatStarted:f}}angular.module("espa.spinner",["espa.httpInterceptor"]);angular.module("espa.spinner").directive("espaSpinner",["notificationChannel","notificationChannelSpinner","$rootScope","$timeout","$http",function(n,t,i,r,u){return{restrict:"AE",templateUrl:"appNugets/Espa.Angular.Spinner/templates/spinnerTemplate.html?=v1",link:function(t,r){u.pendingRequests.length<1&&r.hide();var f=function(n){n.ignoreSpinner!=undefined&&n.ignoreSpinner||r.show()},e=function(){i.$evalAsync(function(){r.hide()})};n.onRequestStarted(t,f);n.onRequestEnded(t,e)}}}]);angular.module("espa.spinner").constant("notificationChannelSpinnerConstants",{events:{_START_REPEAT_:"_START_REPEAT_",_END_REPEAT_:"_END_REPEAT_"}}).service("notificationChannelSpinner",notificationChannelSpinnerService);notificationChannelSpinnerService.$inject=["notificationChannelSpinnerConstants","$rootScope"];
/*
//# sourceMappingURL=spinnerBundle.min.js.map
*/