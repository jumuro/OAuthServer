"use strict";function oAuthRun(n,t,i,r){n.$on("$routeChangeStart",function(){t.isAuthenticated()||(i.path()!=="/login"&&r.pop("error","Access Denied","Access denied. Plese enter your user and password."),i.path("/login"))})}function config(n,t,i){t.interceptors.push("oAuthHttpInterceptor");i.appPathName=window.location.pathname.substr(0,window.location.pathname.lastIndexOf("/")+1);i.oAuthCookieName=("AppInfo_"+window.location.host+i.appPathName).replace(/[:\/]/g,"_")}function oAuthHttpInterceptor(n,t,i,r,u,f){function e(n){var u,e;return f.path()!=="/login"&&(n.headers=n.headers||{},u=i(r.oAuthCookieName),u?n.headers.Authorization="Bearer "+u.access_token:(e=t.get("oAuthService"),e.logOut())),n}function o(u){var f;if(u.status===400)u.data&&u.data.message?f.pop("error","Error",u.data.message):u.data&&u.data.error&&u.data.error==="invalid_grant"&&f.pop("error","Error",u.data.error_description);else{if(u.status===401){var s=t.get("oAuthService"),h=i(r.oAuthCookieName),e=e||t.get("$http"),o=n.defer();return h&&s.refreshToken().then(function(){return o.resolve(e(u.config))}),o.promise}if(u.status===403)f=t.get("toaster"),f.pop("error","Access Denied","You are not authorized to do this request.");else if(u.status===0||u.status===500)u.data&&u.data.message?f.pop("error","Error",u.data.message):f.pop("error","Error",u.data);else return n.reject(u)}}return{request:e,responseError:o}}function oAuthService(n,t,i,r,u,f,e){function s(){var i=t.defer(),e=r(u.oAuthCookieName),s;return e&&(s="grant_type=refresh_token&refresh_token="+e.refresh_token+"&client_id="+e.client_id,n.post(f.appConfig.oAuthURL,s,{headers:{"Content-Type":"application/x-www-form-urlencoded"}}).success(function(n){r(u.oAuthCookieName,n,{path:u.appPathName});i.resolve(n)}).error(function(n){o();i.reject(n)})),i.promise}function h(i){var e=t.defer(),o="grant_type=password&username="+i.username+"&password="+i.password+"&client_id="+f.appConfig.oAuthClientId;return n.post(f.appConfig.oAuthURL,o,{headers:{"Content-Type":"application/x-www-form-urlencoded"}}).success(function(n){r(u.oAuthCookieName,n,{path:u.appPathName});localStorage.setItem("login-info",JSON.stringify({username:i.username}));e.resolve(n)}).error(function(n){e.reject(n)}),e.promise}function c(){return JSON.parse(localStorage.getItem("login-info"))}function l(){return r(u.oAuthCookieName)}function o(){r.remove(u.oAuthCookieName,{path:u.appPathName});localStorage.removeItem("login-info");e.path("/login")}function a(){return r(u.oAuthCookieName)}return{refreshToken:s,logOut:o,logIn:h,hasCookie:l,getUserInfo:c,isAuthenticated:a}}angular.module("jumuro.oAuth",["ipCookie","toaster"]).run(oAuthRun);oAuthRun.$inject=["$rootScope","oAuthService","$location","toaster"];angular.module("jumuro.oAuth").config(config);config.$inject=["$routeProvider","$httpProvider","oAuthConstants"];angular.module("jumuro.oAuth").constant("oAuthConstants",{oAuthCookieName:"",appPathName:""});angular.module("jumuro.oAuth").factory("oAuthHttpInterceptor",oAuthHttpInterceptor);oAuthHttpInterceptor.$inject=["$q","$injector","ipCookie","oAuthConstants","toaster","$location"];angular.module("jumuro.oAuth").service("oAuthService",oAuthService);oAuthService.$inject=["$http","$q","$injector","ipCookie","oAuthConstants","oAuthAppConfigConstants","$location"];
//# sourceMappingURL=oauthBundle.min.js.map
