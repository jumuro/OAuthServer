"use strict";function notificationChannelSpinnerService(n,t){var i=function(i){t.$broadcast(n.events._START_REPEAT_,i)},r=function(i){t.$broadcast(n.events._END_REPEAT_,i)},u=function(t,i){t.$on(n.events._START_REPEAT_,function(n,t){i(t)})},f=function(t,i){t.$on(n.events._END_REPEAT_,function(n,t){i(t)})};return{repeatStarted:i,repeatEnded:r,onRepeatStarted:u,onRepeatEnded:f}}angular.module("jumuro.spinner").directive("jumuroSpinner",["spinnerNotificationChannelService","$rootScope","$timeout","$http",function(n,t,i,r){return{restrict:"AE",templateUrl:"appNugets/Jumuro.Angular.Spinner/templates/spinnerTemplate.html?=v1",link:function(i,u){r.pendingRequests.length<1&&u.hide();var f=function(n){n.ignoreSpinner!=undefined&&n.ignoreSpinner||u.show()},e=function(){t.$evalAsync(function(){u.hide()})};n.onRequestStarted(i,f);n.onRequestEnded(i,e)}}}]);angular.module("jumuro.spinner").constant("spinnerNotificationChannelConstants",{events:{_START_REPEAT_:"_START_REPEAT_",_END_REPEAT_:"_END_REPEAT_"}}).service("spinnerNotificationChannelService",spinnerNotificationChannelService);spinnerNotificationChannelService.$inject=["spinnerNotificationChannelConstants","$rootScope"];angular.module("jumuro.spinner",["jumuro.httpInterceptor"]);
//# sourceMappingURL=spinnerBundle.min.js.map
